# Generated by Django 4.1.9 on 2023-06-19 10:31

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("amount", models.IntegerField()),
                ("successed_at", models.DateTimeField(blank=True, null=True)),
                ("errored_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SUCCESS", "Success"),
                            ("ERROR", "Error"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("info", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("name", models.CharField(max_length=100)),
                ("price", models.IntegerField()),
                ("is_subscription", models.BooleanField(default=False)),
                (
                    "valid_from",
                    models.DateTimeField(
                        auto_now_add=True, help_text="When the plan starts"
                    ),
                ),
                (
                    "valid_to",
                    models.DateTimeField(
                        blank=True, help_text="When the plan expires", null=True
                    ),
                ),
                (
                    "duration",
                    models.IntegerField(help_text="How many days the plan items lasts"),
                ),
                (
                    "tokens",
                    models.IntegerField(help_text="How many tokens a user gets"),
                ),
                (
                    "week_token_limit",
                    models.IntegerField(
                        blank=True,
                        help_text="How many tokens a user can use in a week",
                        null=True,
                    ),
                ),
                (
                    "month_token_limit",
                    models.IntegerField(
                        blank=True,
                        help_text="How many tokens a user can use in a month",
                        null=True,
                    ),
                ),
                (
                    "year_token_limit",
                    models.IntegerField(
                        blank=True,
                        help_text="How many tokens a user can use in a year",
                        null=True,
                    ),
                ),
                (
                    "workshops",
                    models.IntegerField(
                        blank=True,
                        help_text="How many workshops the user receives",
                        null=True,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Token",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("valid_from", models.DateField(auto_now_add=True)),
                ("valid_to", models.DateField(auto_now_add=True)),
                ("used_for", models.CharField(blank=True, max_length=100, null=True)),
                ("used_at", models.DateTimeField(blank=True, null=True)),
                ("is_used", models.BooleanField(default=False)),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="payments.payment",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="payment",
            name="plan",
            field=models.ForeignKey(
                blank=True,
                help_text="Select a plan",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="payments.plan",
            ),
        ),
        migrations.AddField(
            model_name="payment",
            name="user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
